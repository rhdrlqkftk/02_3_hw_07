#include<iostream>

using namespace std;

int N, C, ans;

int visited[20][20];

int map[20][20];

int flag = 0;

int dx[3] = { 0,1,0 };

int dy[3] = { 0,0,1 };

bool check(int x, int y)

{

	if (x < 0 || y < 0 || x >= N || y >= N)

	{

		return false;

	}

	return true;

}

void make(int id, int x, int y, int dir)

{

	int c = 3;

	if (map[x][y] != 0)

	{

		ans = id;

		flag = 1;

		return; 

	}

	else

	{

		map[x][y] = id;

	}

 

	while(c)
	{		
		x = x + dx[dir] * c;
		y = y + dy[dir] * c; 
		if(check(x, y) == false) 
		{
			return; 
		}

		if (map[x][y] != 0)

		{

			ans = id;

			flag = 1;

			return;

		}

		map[x][y] = id;

		c--;

	}

}

int main()

{

	cin >> N >> C;

	int x, y, dir;

	for (int i = 0; i < N; i++)

	{

		for (int j = 0; j < N; j++)

		{

			map[i][j] = 0;

		}

	}

	ans = 0;

	flag = 0;

	for (int i = 1; i <= C; i++)

	{

		cin >> x >> y >> dir;

		make(i, x, y, dir);

		if (flag == 1)break;

	}

	cout << ans << endl;

}